CT_Character_Tools
==================

## Currently being updated with new thoughts and ideas. ##

Use Cases
=========

Removed several use cases. Need to think through the processes. 

UC.1  Create a new character from scratch. 
UC.5  Run dual careers (Navy and Noble). 
UC.7  Output to XML, JSON, Wiki, CSV, HTML, Neo4J, SQL. 
UC.8  Pull Character from datastore.
UC.9  Update missing fields programaticlly.
UC.10 Web/GUI front end to view and edit character.


Classes and Modules
===================
Class Character
  Holds data like UPP, Gender, Name, Skills, Equipment.
  Mostly a data structure with the "generate" method.
  The to_s needs to go into Presenter.
  run_career needs to go away, or into CharacterTools.rb
    run_career is the big issue right now.

Module CharacterTools
  Methods to generate character data.

Module Presenter
  Methods to format output. 

Class Career
  Methods to modify a character based on career choises.
Class <Career>
  Attributes of the specified career.

Program Flow
============

This needs work. My gut feel is that I'm missing the OOP idea and have
too many steps. Yet I don't know enough OOP to be sure.

  Chargen
    Get available careers
    Get options
    Class Character
      Character.new
      Character.generate
    Set terms based on -t option or random.
    == The basic character should not have a career.
    == Terms should actually go after this.

    Add a single term of the Social Career if not already a career.
    For each career in the character.careers hash
      Class Career
      Class <Career>
        Modify the character based on Methods and attributes of 
        Class <Career>

    Display the resulting character on the screen 
    == PresenterSQL is a start on a new topic. Can be ignored for now.
  
  

  
Existing Code
=============

https://github.com/LeamHall/CT_Character_Generator
