9 Oct 15  I'm re-thinking the code and program flow, asking for critique.
  Some of the names and classes exist, but will get heavily refactored.

15 Nov 15 More re-thinking. 

Class Character
  Holds attributes of a character, and minimal methods.
  For example, the name method returns a concatantaion
    of first_name and last_name

  ?? Something to take a hash and set Character attributes. 
    ?? Is that Present, as output is what matters?

Module Chargen

  Provides many of the tools for generating Character.attributes.
  This module is usually a super class of a particular career. 
  Note that Chargen generates attributes. 

  Chargen.survival_roll(survival_required_number)  
    # Returns bool
  
Module Marine, Pirate
  A subclass of Chargen, it will provide tables for the 
    Chargen methods to act on. 
  There are several careers like "Marine", they all subclass Chargen.
  
  Marine.survival_required_number = 7 
  Pirate.survival_required_number = 9 
  
Class Present
  Takes an object of class Character and provides methods to 
    display the object.

 
For example: 

  "Fred" = Character.new
  require 'Marine'
  if Chargen.survival_roll(survival_required_number)
    puts "You lived another year."
  end

  require 'Pirate'
  if Chargen.survival_roll(survival_required_number)
    puts "You lived another year."
  end

## The Marine and Pirate Modules contain attributes and arrays that the
    Chargen module uses. If the character changes careers, like going
    from a Marine to a Pirate, the values in the attributes change.


    


