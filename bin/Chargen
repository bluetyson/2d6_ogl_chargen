#!/usr/bin/env ruby
# Base tool to create a quick NPC.
# ruby Chargen <-c career> <-t terms>
#   career defaults based on Soc and terms to 1-5.

$LOAD_PATH << File.expand_path("../../lib/Careers", __FILE__)
$LOAD_PATH << File.expand_path("../../lib/Tools", __FILE__)

require "optparse"
require "Character"
require "Presenter"

def list_careers(career_dir)
  
  careers = []  
  Dir.foreach(career_dir) do |file|
    fname = "#{career_dir}/#{file}"
    careers << File.basename(file, '.rb') if File.file?(fname)
  end
  careers
end
 
careers = []
#terms  = 0
basic_character = false

available_careers = []
load_dirs = $LOAD_PATH.uniq
load_dirs.each do |dir|
  if dir.end_with?("Careers")
    available_careers = list_careers(dir)
  end
end

options = Hash.new
option_parser = OptionParser.new do |opts|
  opts.on("-c CAREER", "--career CAREER", "Career, defaults based on Soc.
         Can be used more than once for multiple careers.") do |c| 
    careers << c if available_careers.include?(c)
  end
  opts.on("-t TERMS", "--terms TERMS", "Terms, defaults to range of 1-5") do |t|
    options["terms"] = t.to_i
  end
  opts.on("-b", "--basic", "Just a basic Character") do
    basic_character = true
  end
  opts.on("-s", "--sql", "Provide SQL statement output") do |s|
    options["sql"] = true
  end 
end
option_parser.parse!

character = Character.new
character.generate

if options["terms"].nil?
  srand && terms = rand(5) + 1
else
  terms = Integer(options["terms"])
end

unless basic_character
  careers << CharacterTools.social_status(character)
  careers.each do |career|
    require career
    this_career = Module.const_get(career).new
    character.run_career(this_career, terms)
  end

end

Presenter.show(character)
if options["sql"]
  require "PresenterSQL"
  PresenterSQL.show(character)
end
